"""Создайте класс Terminal. Создайте объект-карточку от этого
класса, передав номер своей карточки и пин код. При этом,
необходимо проверить валидность карточки: номер карточки
должен содержать строго 16 цифр, а пин код - 4 цифры (для этого
используйте инкапсуляцию). При создании карточки в ней
содержится 0 сом. Далее в классе должны быть следующие
методы:

 метод put, который будет принимать в качестве
аргументов: пин код карточки, вторым аргументом -
сумму денег, которую вы хотите закинуть на эту
карточку. Прежде, чем закидывать деньги, необходимо
проверить введенный пин код на совпадение
(используйте инкапсуляцию)
 метод get_money, который также принимает первым
аргументом пин код, вторым аргументом - сумму денег,
которую вы хотите извлечь из карточки. Здесь также
необходимо использовать валидацию: проверка пин
кода + сумма денег должна быть округленной до
десятичных чисел, типа 10, 100, 200, 5000 и т.д. (67,
899, 45.6 - невалидные данные). И только после
проверки деньги извлекаются.

Примените данные методы к своей карточке несколько раз и в
конце выдайте, сколько денег на карточке. Примечание: нельзя
извлечь сумму денег, если она больше, чем сумма денег на
карточке; также нельзя вытащить пин код карточки (эти данные
должны быть скрыты)"""

# class Terminal:

#     summa = 0

#     def get_summ(self):
#         return self.summa

#     def __init__(self,number_card,__pin):
#         if len(str(number_card)) == 16 and type(number_card) == int:
#             self.card_number = number_card
#         else:
#             raise ValueError ('карта должна содержать 16 цифр')
#         if __pin in range(1000,9999) and type(number_card) == int:
#             self.__pin = __pin
#         else:
#             raise ValueError ('пин должен содержать 4 цифры')
    
#     def put(self ,number):
#         self.number = number
#         self.summa += number

#     def get_money(self,pincode_confirmation, minus_summa):
#         if self.__pin == pincode_confirmation and self.summa >= minus_summa:
#             self.summa -= minus_summa
#         else:
#             raise ValueError ('ведите правильные данные')

# card = Terminal(4111111111111112,6556)
# # print(card.get_summ())
# # card.put(242344)
# # card.get_money(6556,343)
# # print(card.get_summ())
# # print(card.__pin)